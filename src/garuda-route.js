/**
 * License : 
 * Author  : @lamhotsimamora | { Garuda Route 2.5 }
 * Updated June 2018
 * Copyright@2018
 */
"use strict"
class GarudaResponse{init(d){if(d){this.el=_cUn(d.el);this.rsp=_cUn(d.response);this.srv=_cUn(d.server);this.e=_cUn(d.error);this.iR=!0;this.bF=_cUn(d.before);this.dt=_cUn(d.data);this.ext=d.ext}else{this.iR=!1} return this} executed(){if(this.iR==!1){return} if(this.rsp!=undefined){try{var ds=null;if(this.dt!=undefined&&this.dt.single){ds=this.dt.single} if(this.rsp.isTemplate){this.el.setContent(this.rsp.getHtml);(ds==null)?'':this.el.setContent({single:ds});return}else if(this.rsp.isGaruda){if(this.rsp.getLength===undefined){var a=this.rsp.getContent;this.el.setContent(a);(ds==null)?'':this.el.setContent({single:ds})} return}else if(_isFunction(this.rsp)){var ab=this.rsp(this.el,this.srv,ds);if(ab===undefined){return} if(_isArray(ab)){ab=_toJSON(ab)}else if(_whatThis(ab)==='number'||_whatThis(ab)==='boolean'){ab=ab.toString()} this.el.setContent(ab);(ds==null)?'':this.el.setContent({single:ds});return}else if(_whatThis(this.rsp)==='string'){if(this.bF!=undefined){this.el.setContent(this.bF)} __({url:this.rsp+this.ext,setupAjax:{header:'text/html'}}).request(($r,$c,$a)=>{this.el.setContent($r);(ds==null)?'':this.el.setContent({single:ds})});return} var bb;if(_whatThis(this.rsp)==='number'||_whatThis(this.rsp)==='boolean'){bb=this.rsp.toString()}else if(_isArray(this.rsp)||_whatThis(this.rsp)==='object'){bb=_toJSON(this.rsp)} this.el.setContent(bb);(ds==null)?'':this.el.setContent({single:ds});return}catch(e){_dev_?_writeLog('[ GarudaResponse ] Error when executed response ! ( '+e+')'):''}}else{_dev_?_writeLog(this.e[0]&&this.e[0]):''} return this}} class GarudaRoute extends GarudaResponse{constructor(el=null){super();this.srv={};this.DT=[];this.bF=undefined;this.rN=undefined;this._gx='[ GarudaRoute ]';if(el){this.el=(_whatThis(el)==='string')?el:undefined} this.config();this.ext='.garuda';return this} to(e){if(e){if(_whatThis(e)==='string'&&e!=null&&e!=''){this.el=Garuda(e)}else if(e.isGaruda){this.el=e}else{this.el=undefined}} return this} config(){this.init().setHash();return this} init(){this.srv={url:window.location.href,hash:window.location.hash,pathname:window.location.pathname,location:window.location.location,protocol:window.location.protocol,host:window.location.host,origin:window.location.origin};return this} getUrl(a){if(a){return this.srv.origin+this.srv.pathname+'#/'+a} return this.srv.origin+this.srv.pathname+this.srv.hash} setHash(){var h=this.srv.hash.substring(2,this.srv.hash.length);this._hash=h?h.trim().toLowerCase():h;return this} register(d){if(d!=undefined){this.rRu=d;for(var i=0;i<d.length;i++){var RT=(d[i].route!=''||d[i].route!=null)?d[i].route:undefined;if(RT!=undefined){if(_whatThis(RT)==='string'){RT=RT.trim().toLowerCase();if(RT.substring(0,1)==='/'){RT=RT.substring(1,RT.length)}}else{_dev_?_writeLog(this._gx+' Route '+RT.toString()+' should be as string '):''}} this.DT[i]={route:RT}} this.DT.sort()}else{_dev_?_writeLog(this._gx+' Data of route and response is EMPTY'):''} this.work();return this} reload(){location.reload(!0);return this} get getAllResponse(){var a=[];for(var i=0;i<this.rRu.length;i++){a[i]=this.rRu[i].response} return a.sort()} get getAllRoute(){var a=[];for(var i=0;i<this.DT.length;i++){a[i]=this.DT[i].route} return a.sort()} get getAll(){return this.rRu} destroy(){this.srv={};this.DT=[];this.bF=undefined;this.rN=undefined;return this} nothing(a){if(a){if(_whatThis(a)==='string'){this.rN=a+this.ext}else{this.rN=undefined;_dev_?_writeLog(this._gx+' Route nothing should be a name of file (string)'):''}}else{this.rN=undefined} return this} before(x){if(x){if(_whatThis(x)==='string'){this.bF=x}else{this.bF=undefined;_dev_?_writeLog(this._gx+' before Ajax load should be as string'):''}}else{this.bF=undefined} return this} extension(x){if(x&&_whatThis(x)==='string'){var a=x.substring(0,1);this.ext=(a==='.')?x:'.'+x}else{this.ext='.garuda'} _dev_?_writeLog(this._gx+' Extension of file for ajax is ('+this.ext+')',!0):'';return this} default(x){var a=x?x:this.DT[i].route,ex=['#','#/'];if(this.srv.hash===''||this.srv.hash===ex[1]){var b='#/'+a;_putUrl({url:b});this.reload()} return this} fresh(rr){if(rr===undefined||_whatThis(rr)!='string'){_dev_?_writeLog(this._gx+' You must be write the route as string / route is undefined'):'';return} var mm=!1;rr=rr?rr.trim().toLowerCase():undefined;for(var i=0;i<this.DT.length;i++){var rU=this.DT[i].route,rspU=this.rRu[i].response;if(rU!=undefined&&rU==rr){mm=!0;_dev_?_writeLog(this.msg(rr,this.getUrl(rr),!0),!1):'';super.init({el:this.el,response:rspU,server:this.srv,error:[this._gx+' response is undefined '+this.err(rr)],before:this.bF,data:this.rRu[i].data,ext:this.ext}).executed();return}else{mm=!1;_dev_?_writeLog(this.msg(rr,this.getUrl(rr),!1),!0):''}} if(mm==!1){if(this.rN!=undefined){if(this.bF!=undefined){this.el.setContent(this.bF)} this.routeNothing(this.rN,this.el,rr)}} return this} routeNothing(a,b,h){__({url:a,setupAjax:{header:'text/html'}}).request(($r,$c,$a)=>{b.setContent($r);b.setContent({single:{route:h}})});return this} work(){if(this.el===undefined){_dev_?_writeLog(this._gx+' Object destination is undefined'):'';return} if(this.DT.length===undefined){_dev_?_writeLog(this._gx+' Data of route is undefined'):'';return} var mm=!1;for(var i=0;i<this.DT.length;i++){var rU=this.DT[i].route,rspU=this.rRu[i].response,dt=this.rRu[i].data;if(rU!=undefined&&rU==this._hash){mm=!0;_dev_?_writeLog(this.msg(this._hash,this.getUrl(this._hash),!0),!1):'';super.init({el:this.el,response:rspU,server:this.srv,error:[this._gx+' response is undefined '+this.err(this._hash)],before:this.bF,data:dt,ext:this.ext}).executed();return}else{mm=!1;_dev_?_writeLog(this.msg(this._hash,this.getUrl(this._hash),!1),!0):''}} if(mm==!1){if(this.rN!=undefined){if(this.bF!=undefined){this.el.setContent(this.bF)} this.routeNothing(this.rN,this.el,this._hash)}} return this} msg(r,u,m){var d={'Route':r,'URL':u,'Match':m};return this._gx+_toJSON(d)} err(a){return _toJSON({route:a})}}